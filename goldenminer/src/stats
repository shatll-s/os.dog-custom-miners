#!/bin/bash

####################################################################################
###
### NOCK goldenminer
### os.dog integration: @osdog
###
####################################################################################

#	example
#
#	{
#		"miner":"qubitcoin-miner",
#		"algo":"qhash",
#		"online":"1707474764",
#		"total_hr":"71842910",
#		"total_share":"1",
#		"total_badshare":"0",
#		"ver":"0.68.1",
#		"temp":[31,28,29,29,31,29,30,30],
#		"temp2":[38,35,35,35,37,34,37,37],
#		"temp3":[0,0,0,0,0,0,0,0],
#		"fan":[45,45,44,45,44,44,45,46],
#		"hr":[11580000,27740000,0,0,2990000,0,22650000,6880000],
#		"share":[0,1,0,0,0,0,0,0],
#		"badshare":[0,0,0,0,0,0,0,0],
#		"invshare":[0,0,0,0,0,0,0,0],
#		"busid":["01","04","05","07","08","09","0a","0b"],
#		"coin":"QBC"
#	}

#	global variables, don`t change it
####################################################################################
#	The file contains the following variables:
#	MINERNAME API_PORT CUSTOM_URL POOL PASS WALLET TEMPLATE COIN ADDITION
CFG_FILENAME="miner.cfg"

dirname=$(dirname "$0")
[[ -f "$dirname/$CFG_FILENAME" ]] && . $dirname/$CFG_FILENAME

LOG_FILE="/dog/log/goldenminer.log"
GPU_STATS="/run/dog/gpuStats"
gpuCount=$(jq '.gpu | length' < "$GPU_STATS")

busid_json='[]'
declare -a hr_data=( )

miner_online_raw=
miner_ver="0.3"
miner="goldenminer"
algo="nock"

# Initialize arrays with 0
for (( i=0; i < gpuCount; i++ )); do
  hr_data+=(0)
done

for (( i=0; i < gpuCount; i++ )); do
    busid=$(jq -r ".gpu[$i].b" < "$GPU_STATS")
    busid_json=$(jq ". += [\"$busid\"]" <<< "$busid_json")

    # Extract hashrate for Card-$i from log
    rawHr=$(tail -n 200 $LOG_FILE | grep "Card-$i speed:" | tail -1 | awk '{print $5}')
    if [[ -n "$rawHr" && "$rawHr" != "0" ]]; then
        # Use raw p/s value
        hr_data[$i]=$(awk "BEGIN {printf \"%.2f\", $rawHr}")
    fi
done

# Handle case when no GPU data is available
if (( gpuCount == 0 )); then
    hr_json='[]'
else
    hr_json=$(printf '%s\n' "${hr_data[@]}" | jq -R . | jq -s .)
fi

# calculate total_hr
totalHr=0
for val in "${hr_data[@]}"; do
    totalHr=$(echo "$totalHr + $val" | bc)
done

data=$(
    jq -n \
        --arg algo "$algo" \
        --arg miner "$miner" \
        --arg ver "$miner_ver" \
        --argjson busid "$busid_json" \
        --argjson hr "$hr_json" \
    '{
        $miner,
        $algo,
        $ver,
        total_hr: "'"$totalHr"'",
        busid: $busid,
        hr: $hr
    }'
)

if [[ ! -z $miner_online_raw ]]; then
  online=$(date --date "-$miner_online_raw sec" +%s)
  data=`jq ". += {\"online\": $online}" <<< "$data"`
fi

echo "$data" | jq -c