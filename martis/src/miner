#!/bin/bash
####################################################################################
###
### martis miner
### os.dog integration: @osdog
###
####################################################################################
. /dog/colors
cd `dirname $0`

#	global variables, don`t change it
####################################################################################
#	The file contains the following variables:
#	MINERNAME API_PORT CUSTOM_URL POOL PASS WALLET TEMPLATE COIN ADDITION
CFG_FILENAME="miner.cfg"
. $CFG_FILENAME

#	custom package variables
####################################################################################
MINER_DIR=files
CONFIG_FILE=$MINER_DIR/config.txt
LOG="/dog/log/martis-miner.log"

#	custom package body
####################################################################################

#	this miner need many dependencies, so install script is placed in individual file
#	if the miner is builded or you don`t need to install ton of dependecies, you can
#	remove this string or install something right here
./install.sh

args=$ADDITION

#conf="SEED=$WALLET"								            #	wallet = seed
#[[ $PASS ]] && conf+="\nTONAPI_TOKEN=$PASS"		#	pass = tonapi token
#if [[ "$ADDITION" == *"--target-address"* ]]; then
#  target_address=`echo $ADDITION | sed -e 's/.*--target-address //; s/ .*//'`
#  [[ $target_address ]] && conf+="\nTARGET_ADDRESS=$target_address"
#  args=`echo "$args" | sed -e "s/--target-address $target_address//"`
#fi

### COMMENT ALL ###
#echo -e "$conf" > $CONFIG_FILE					      #	write seed and optionally api token to config file
#
#nvmVersion=$(nvm --version 2>/dev/null)
#if [[ ! $nvmVersion ]]; then
#	echo -e "> Install nvm"
#	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
#
#	export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
#	[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
#
#	source ~/.bashrc
#else
#	echo "${GREEN}> nodejs already installed${NOCOLOR}"
#fi
#NODE_MAJOR=20
#nvm use $NODE_MAJOR
#
##	default values for miner
#[[ "$ADDITION" != *"--givers"* ]] && args+=" --givers 1000"
#[[ "$ADDITION" != *"--api"* ]] && args+=" --api tonhub"
#[[ "$ADDITION" != *"--gpu-count"* ]] && args+=" --gpu-count $(gpu-detect NVIDIA)"
#
#cd $MINER_DIR
### COMMENT ALL END ###

HOME_NODE="192.168.2.9:19333"

GPU_STATS="/run/dog/gpuStats"
gpuCount=$(jq '.gpu | length' < "$GPU_STATS")
for (( i=0; i < gpuCount; i++ )); do
  dir="/home/user/martiscoin/node$i"
  mkdir -p $dir
  cp msc.conf $dir
  #  args="-apiuri=http://0.0.0.0 -apiport=4242$i -mineaddress=$WALLET -server=0 -mine=1 -useopencl=1 -opencldevice=$i"
  #  args+=" -connect=$HOME_NODE -addnode=$HOME_NODE -iprangefiltering=0"
  args="-datadir=$dir -mineaddress=$WALLET -server=0 -mine=1 -useopencl=1 -opencldevice=$i"
  args+=" -addnode=$HOME_NODE -whitelist=$HOME_NODE -iprangefiltering=0"
  batch="dotnet files/Martiscoin.Node.dll $args"
  echo -e "GPU[$i] starting mining with next batch:\n$batch"
  screen-kill node$i
  screen -dmS node$i $batch
#  screen -dmS node$i dotnet files/Martiscoin.Node.dll -apiuri=http://0.0.0.0 -apiport=4242$i -mineaddress=$WALLET -server=0 -mine=1 -useopencl=1 -opencldevice=$i -connect=192.168.88.21:39333 -addnode=192.168.88.21:39333 -iprangefiltering=0 -datadir=/home/user/martiscoin/node$i -addnode=106.107.196.162 -addnode=180.191.254.43 -addnode=111.38.43.235
done

trap ctrl_c INT

function ctrl_c() {
  echo "Ctrl + C happened"
  screen -ls
  for (( i=0; i < gpuCount; i++ )); do
      screen-kill node$i
  done
  screen -ls
}

tail -f /dev/null
