#!/bin/bash
####################################################################################
###
### feeless miner
### os.dog integration: @osdog
###
####################################################################################
. /dog/colors
cd `dirname $0`

#	global variables, don`t change it
####################################################################################
#	The file contains the following variables:
#	MINERNAME API_PORT CUSTOM_URL POOL PASS WALLET TEMPLATE COIN ADDITION
CFG_FILENAME="miner.cfg"
. $CFG_FILENAME

#	custom package variables
####################################################################################
CONFIG_FILE=miner.json
MINER_DIR=files
LOG="/dog/log/feeless-miner.log"
#	custom package body
####################################################################################

# install section
./install.sh

# install section end


# parse args
parse_args() {
    local args="$1"
    shift
    local keys=("$@")

    read -ra tokens <<< "$args"
    local filtered=()

    for ((i = 0; i < ${#tokens[@]}; i++)); do
        local token="${tokens[i]}"
        local is_key=0

        for key in "${keys[@]}"; do
            if [[ "$token" == "--$key" ]]; then
                local var_name="${key//-/_}"
                if (( i + 1 < ${#tokens[@]} )); then
                    local value="${tokens[$((i+1))]}"
                    export "${var_name}=$value"
                else
                    export "${var_name}="
                fi
                ((i++)) # skip the value
                is_key=1
                break
            fi
        done

        if [[ $is_key -eq 0 ]]; then
            filtered+=("${token}")
        fi
    done

    REMAINING_ARGS="${filtered[*]}"  # Set global variable instead
}

echo "> additional args: $ADDITION"
REMAINING_ARGS=""
parse_args "$ADDITION" wsUrl httpUrl private token
remainingAddition=$REMAINING_ARGS
echo "> remaining args: $remainingAddition"

# Create JSON config file
cat > "$CONFIG_FILE" << EOF
{
  "wsUrl": "${wsUrl:-ws://localhost:20000}",
  "httpUrl": "${httpUrl:-http://localhost:8000}",
  "private": "${private:-xxx}",
  "token": "${token:-}"
}
EOF

$LINE

nvmVersion=$(nvm --version 2>/dev/null)
if [[ ! $nvmVersion ]]; then
	echo -e "> Install nvm"
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash

	export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
	[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

	source ~/.bashrc
else
	echo "${GREEN}> nodejs already installed${NOCOLOR}"
fi
NODE_MAJOR=18
nvm use $NODE_MAJOR

cd $MINER_DIR

$LINE
echo -e "${GREEN}> Starting custom miner${WHITE}"
batch="node --experimental-websocket node_modules/feeless-node/dist/miner2.js $remainingAddition"
#	unbuffer is needed to keep colors with tee
unbuffer $batch 2>&1 | tee --append $LOG
